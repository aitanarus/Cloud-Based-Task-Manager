@using Core.DTOs

<div class="card mb-3 task-card shadow-sm">
    <div class="card-header" @onclick="ToggleCard">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">@Task.Title</h5>
            <small class="text-muted">Due: @Task.DueDate?.ToString("MM/dd/yyyy")</small>
            <button class="btn btn-link" type="button">
                <i class="fas @(IsExpanded ? "fa-chevron-up" : "fa-chevron-down")"></i>
            </button>
        </div>
    </div>

    @if (IsExpanded)
    {
        <div class="card-body">
            <p class="card-text">@Task.Description</p>

            <p class="card-text">
                <strong>Review:</strong> <span>@Task.Review.Mood</span><br />
                <small>@Task.Review.Comment</small>
            </p>

            <p class="card-text">
                <strong>Resources:</strong><br />
                @if (Task.Resources != null && Task.Resources.Count > 0)
                {
                    <ul>
                        @foreach (var resource in Task.Resources)
                        {
                            <li><a href="@resource.Url">@resource.Title</a></li>
                        }
                    </ul>
                }
                else
                {
                    <small>No resources available</small>
                }
            </p>
        </div>
    }
</div>

@code {
    [Parameter]
    public TaskDTO Task { get; set; }

    private bool IsExpanded { get; set; } = false;

    private void ToggleCard()
    {
        IsExpanded = !IsExpanded;
    }
}
