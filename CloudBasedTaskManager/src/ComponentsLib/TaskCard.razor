@using Core.DTOs
@using Core.Enum

<div class="card mb-3 task-card shadow-sm">
    <div class="card-header" @onclick="ToggleCard">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">@Task.Title</h5>
            <small class="text-muted">Due: @Task.DueDate?.ToString("MM/dd/yyyy")</small>
            <button class="btn btn-link" type="button">
               
            </button>
        </div>
    </div>

    @if (IsExpanded)
    {
        <div class="card-body">

            @if (!showReviewForm)
            {

            <p class="card-text">@Task.Description</p>

            <p class="card-text">
                <strong>Review:</strong> <span>@Task.Review.Mood</span><br />
                <small>@Task.Review.Comment</small>
            </p>

            <p class="card-text">
                <strong>Resources:</strong><br />
                @if (Task.Resources != null && Task.Resources.Count > 0)
                {
                    <ul>
                        @foreach (var resource in Task.Resources)
                        {
                            <li><a href="@resource.Url">@resource.Title</a></li>
                        }
                    </ul>
                }
                else
                {
                    <small>No resources available</small>
                }
            </p>
            @if (Task.State == TaskState.Pending)
            {
                <button class="btn btn-primary" @onclick="OpenReviewModal">Complete Task</button>
            }
            }

            <!-- Conditionally render the TaskReviewForm based on the value of showReviewForm -->
            @if (showReviewForm)
            {
                <TaskReviewForm OnClose="CloseReviewModal" />
            }

        </div>
    }
</div>

@code {
    [Parameter]
    public TaskDTO Task { get; set; }

    private bool IsExpanded { get; set; } = false;

    private bool showReviewForm = false;


    private ReviewDTO Review { get; set; }

    private void ToggleCard()
    {
        IsExpanded = !IsExpanded;
    }

    private void OpenReviewModal()
    {
        showReviewForm = true;
    }

    private void CloseReviewModal()
    {
        showReviewForm = false;
    }
}
